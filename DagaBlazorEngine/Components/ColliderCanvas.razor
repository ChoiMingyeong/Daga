@using DagaBlazorEngine.Renderers
@implements IDisposable
@inject DagaBlazorEngine.Canvas.ColliderCanvas Canvas

<canvas @ref="_canvasRef" width="@ScreenSize.Width" height="@ScreenSize.Height" />

@code {
    private ElementReference _canvasRef;
    private List<IColliderRenderer> _renderers = [];

    protected override void OnInitialized()
    {
        _renderers.Add(new RectColliderRenderer());
        ScreenSize.ResizeHandler += OnResize;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ScreenSize.InitializeAsync();
            await Canvas.InitializeAsync();
        }

        await Canvas.DrawAsync(_renderers);
    }

    public void Dispose()
    {
        ScreenSize.ResizeHandler -= OnResize;
    }

    public void OnResize(object? sender, ScreenSize screenSize)
    {
        Canvas.CancellationTokenSource.Cancel();
    }
}