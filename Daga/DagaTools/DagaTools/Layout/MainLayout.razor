@inherits LayoutComponentBase

<MudThemeProvider Theme="theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Dense="true">
        <MudElement HtmlTag="a" href="">
            <MudStack Row AlignItems="AlignItems.Center" Spacing="0">
                <MudImage Src="daga-icon-32.png" />
                <MudText Typo="Typo.h6" Style="font-weight: bold;">DAGA</MudText>
            </MudStack>
        </MudElement>
        <MudSpacer />
        <MudStack hidden="@(null == AuthService.Account)" Row>
            <MudStack Row Spacing="1">
                <MudMenu Label="Project" Variant="Variant.Text" EndIcon="@Icons.Material.Filled.KeyboardArrowDown" Dense>
                    <MudMenuItem Label="Project1" />
                    <MudDivider />
                    <MudMenuItem Label="Create" />
                    <MudMenuItem Label="Join" />
                </MudMenu>
            </MudStack>
            <MudItem>
                <MudIconButton Icon="@Icons.Material.Filled.AccountCircle" OnClick="@OnProfilIconButtonClicked" />
                <MudPopover Open="@profilePopoverOpen" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter"
                            RelativeWidth="DropdownWidth.Adaptive" Elevation="1">
                    <MudButton OnClick="OnLogoutButtonClicked">Logout</MudButton>
                </MudPopover>
            </MudItem>
        </MudStack>
        <MudElement hidden="@(null != AuthService.Account)" HtmlTag="a" href="login">Login</MudElement>
    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Style="margin-top: 50px">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme theme = new()
        {
            PaletteLight = new()
            {
                AppbarBackground = Colors.Shades.White,
                Primary = Colors.Indigo.Darken3,
            },
        };
    private bool profilePopoverOpen = false;

    protected override async Task OnInitializedAsync()
    {
        await AuthService.GetAuthenticationStateAsync();
    }

    private void OnProfilIconButtonClicked()
    {
        profilePopoverOpen = !profilePopoverOpen;
    }

    private async Task OnLogoutButtonClicked()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("login", forceLoad: true);
    }
}