@inherits LayoutComponentBase

<MudThemeProvider Theme="theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0" Dense="true">
        <MudLink Typo="Typo.h6" Class="px-4" Href="" Color="Color.Secondary">
            <MudIcon Icon="@Icons.Material.Filled.Build" />
            DagaTools
        </MudLink>
        <MudSpacer />
        @if (null != AuthService.Account)
        {
            <div>
                <MudIconButton Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Secondary" OnClick="@OnProfilIconButtonClicked" />
                <MudPopover Open="@profilePopoverOpen" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter" RelativeWidth="DropdownWidth.Adaptive">
                    <MudButton OnClick="OnLogoutButtonClicked">로그아웃</MudButton>
                </MudPopover>
            </div>
        }
        else
        {
            <MudLink Href="login" Color="Color.Secondary">Login</MudLink>
        }
    </MudAppBar>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme theme = new()
        {
            PaletteLight = new()
            {
                AppbarBackground = Colors.Brown.Darken3,
                Primary = Colors.LightGreen.Darken3,
                Secondary = Colors.Yellow.Lighten5,
            },
        };
    private bool profilePopoverOpen = false;

    protected override async Task OnInitializedAsync()
    {
        await AuthService.GetAuthenticationStateAsync();
    }

    private void OnProfilIconButtonClicked()
    {
        profilePopoverOpen = !profilePopoverOpen;
    }

    private async Task OnLogoutButtonClicked()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("login", forceLoad: true);
    }
}